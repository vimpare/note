1.let 和 const 命令

* ES6 新增了let命令，用来声明变量。它的用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效。
如果每一轮循环的变量i都是重新声明的，那它怎么知道上一轮循环的值，从而计算出本轮循环的值？这是因为 JavaScript 引擎内部会记住上一轮循环的值，初始化本轮的变量i时，就在上一轮循环的基础上进行计算。


* let命令改变了语法行为，它所声明的变量一定要在声明后使用，否则报错。

let不允许在相同作用域内，重复声明同一个变量。

避免在块级作用域内声明函数。如果确实需要，也应该写成函数表达式，而不是函数声明语句。
```
// 函数声明语句
{
  let a = 'secret';
  function f() {
    return a;
  }
}

// 函数表达式
{
  let a = 'secret';
  let f = function () {
    return a;
  };
}
```


const声明一个只读的常量。一旦声明，常量的值就不能改变。

ES6 一共有 6 种声明变量的方法:
```
var 
function
let 
const
import
class
```


顶层对象，在浏览器环境指的是window对象，在 Node 指的是global对象。


变量的解构赋值

























